name: Docker build and push

on:
  push:

env:
  dockerhub_user: allanger
  manufacturer: allanger
  product_name: db-auth-gateway
  main_go_path: ./cmd

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - { go: "1.17", goos: "linux", goarch: "amd64", dockerArch: "amd64" }
          - {
              go: "1.17",
              goos: "linux",
              goarch: "arm64",
              dockerArch: "arm64/v8",
            }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Compile Binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: "0"
        run: |
          go build -tags build -o ${{ env.product_name }} ${{ env.main_go_path }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ env.dockerhub_user }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set action link variable
        run: echo "LINK=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV

      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: Dockerfile-ci
          platforms: ${{ matrix.goos }}/${{ matrix.dockerArch }}
          tags: |
            ${{ env.dockerhub_user }}/${{ env.product_name }}:latest-${{ matrix.goarch }}
            ${{ env.dockerhub_user }}/${{ env.product_name }}:v1.0.3-${{ matrix.goarch }}
            ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:latest-${{ matrix.goarch }}
            ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:v1.0.3-${{ matrix.goarch }}
          labels: |
            action_link=${{ env.LINK }}
            actor=${{ github.actor }}
            sha=${{ github.sha }}
            ref=${{ github.ref }}

  push_to_ghcr:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a docker manifest for a versioned container
        run: |
          docker manifest create ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:v1.0.3 \
            --amend ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:v1.0.3-amd64 \
            --amend ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:v1.0.3-arm64

      - name: Create a manifest for a latest container
        run: |
          docker manifest create ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:latest \
            --amend ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:latest-amd64 \
            --amend ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:latest-arm64

      - name: Push the manifest
        run: |
          docker manifest push ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:v1.0.3
          docker manifest push ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:latest 

  push_to_dockerhub:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ env.dockerhub_user }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create a docker manifest for a versioned container
        run: |
          docker manifest create ${{ env.dockerhub_user }}/${{ env.product_name }}:v1.0.3 \
            --amend ${{ env.dockerhub_user }}/${{ env.product_name }}:v1.0.3-amd64 \
            --amend ${{ env.dockerhub_user }}/${{ env.product_name }}:v1.0.3-arm64

      - name: Create a manifest for a latest container
        run: |
          docker manifest create ${{ env.dockerhub_user }}/${{ env.product_name }}:latest \
            --amend ${{ env.dockerhub_user }}/${{ env.product_name }}:latest-amd64 \
            --amend ${{ env.dockerhub_user }}/${{ env.product_name }}:latest-arm64

      - name: Push the manifest
        run: |
          docker manifest push ${{ env.dockerhub_user }}/${{ env.product_name }}:v1.0.3
          docker manifest push ${{ env.dockerhub_user }}/${{ env.product_name }}:latest 